/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 28 07:15:11 GMT 2020
 */

package com.nju.svcrecommend.serviceImp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcrecommend.domain.AuthorVO;
import com.nju.svcrecommend.domain.PaperVO;
import com.nju.svcrecommend.serviceImp.CitationsCmp;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class CitationsCmp_ESTest extends CitationsCmp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CitationsCmp citationsCmp0 = new CitationsCmp();
      PaperVO paperVO0 = new PaperVO();
      // Undeclared exception!
      try { 
        citationsCmp0.compare((Object) null, paperVO0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcrecommend.serviceImp.CitationsCmp", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CitationsCmp citationsCmp0 = new CitationsCmp();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        citationsCmp0.compare((Object) null, object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to com.nju.svcrecommend.domain.PaperVO
         //
         verifyException("com.nju.svcrecommend.serviceImp.CitationsCmp", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CitationsCmp citationsCmp0 = new CitationsCmp();
      PaperVO paperVO0 = new PaperVO();
      PaperVO paperVO1 = new PaperVO();
      paperVO1.setCitations(1);
      int int0 = citationsCmp0.compare(paperVO0, paperVO1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CitationsCmp citationsCmp0 = new CitationsCmp();
      PaperVO paperVO0 = new PaperVO();
      int int0 = citationsCmp0.compare(paperVO0, paperVO0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CitationsCmp citationsCmp0 = new CitationsCmp();
      PaperVO paperVO0 = new PaperVO();
      PaperVO paperVO1 = new PaperVO(1735, "", (String) null, "", "", 1735, 1735, (ArrayList<AuthorVO>) null, "F.}1Z.rMCKp!H*O:lQ<");
      int int0 = citationsCmp0.compare(paperVO1, paperVO0);
      assertEquals((-1), int0);
  }
}

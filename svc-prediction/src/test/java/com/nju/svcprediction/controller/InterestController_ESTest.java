/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 01 06:18:15 GMT 2020
 */

package com.nju.svcprediction.controller;

import com.nju.svcprediction.domain.ResponseVO;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcprediction.controller.InterestController;
import com.nju.svcprediction.dataMapper.acm.ACMInterestMapper;
import com.nju.svcprediction.dataMapper.ieee.IEEEInterestMapper;
import com.nju.svcprediction.domain.Author;
import com.nju.svcprediction.domain.Document;
import com.nju.svcprediction.domain.InterestRes;
import com.nju.svcprediction.service.InterestSvc;
import com.nju.svcprediction.serviceImp.InterestSvcImp;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class InterestController_ESTest extends InterestController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ACMInterestMapper aCMInterestMapper0 = mock(ACMInterestMapper.class, new ViolatedAssumptionAnswer());
      IEEEInterestMapper iEEEInterestMapper0 = mock(IEEEInterestMapper.class, new ViolatedAssumptionAnswer());
      InterestSvcImp interestSvcImp0 = new InterestSvcImp(aCMInterestMapper0, iEEEInterestMapper0);
      InterestController interestController0 = new InterestController(interestSvcImp0);
      ArrayList<Document> arrayList0 = new ArrayList<Document>();
      ArrayList<String> arrayList1 = new ArrayList<String>(1);
      Document document0 = new Document("", "", 1, (ArrayList<Author>) null, arrayList1);
      arrayList0.add(document0);
      InterestRes interestRes0 = interestController0.interestPredictionAPI(arrayList0);
      assertEquals("", interestRes0.getWord());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InterestController interestController0 = new InterestController((InterestSvc) null);
      ArrayList<Document> arrayList0 = new ArrayList<Document>();
      // Undeclared exception!
      try { 
        interestController0.interestPredictionAPI(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcprediction.controller.InterestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ACMInterestMapper aCMInterestMapper0 = mock(ACMInterestMapper.class, new ViolatedAssumptionAnswer());
      IEEEInterestMapper iEEEInterestMapper0 = mock(IEEEInterestMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEInterestMapper0).getInterestHistoryByAuthorId(anyInt());
      InterestSvcImp interestSvcImp0 = new InterestSvcImp(aCMInterestMapper0, iEEEInterestMapper0);
      InterestController interestController0 = new InterestController(interestSvcImp0);
      // Undeclared exception!
      try { 
        interestController0.interestPrediction((-1914), "com.nju.svcprediction.controller.InterestController");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcprediction.serviceImp.InterestSvcImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ACMInterestMapper aCMInterestMapper0 = mock(ACMInterestMapper.class, new ViolatedAssumptionAnswer());
      IEEEInterestMapper iEEEInterestMapper0 = mock(IEEEInterestMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEInterestMapper0).getInterestHistoryByAuthorId(anyInt());
      InterestSvcImp interestSvcImp0 = new InterestSvcImp(aCMInterestMapper0, iEEEInterestMapper0);
      InterestController interestController0 = new InterestController(interestSvcImp0);
      // Undeclared exception!
      try { 
        interestController0.interestHistory((-1), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcprediction.serviceImp.InterestSvcImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ACMInterestMapper aCMInterestMapper0 = mock(ACMInterestMapper.class, new ViolatedAssumptionAnswer());
      IEEEInterestMapper iEEEInterestMapper0 = mock(IEEEInterestMapper.class, new ViolatedAssumptionAnswer());
      InterestSvcImp interestSvcImp0 = new InterestSvcImp(aCMInterestMapper0, iEEEInterestMapper0);
      InterestController interestController0 = new InterestController(interestSvcImp0);
      ArrayList<Document> arrayList0 = new ArrayList<Document>();
      InterestRes interestRes0 = interestController0.interestPredictionAPI(arrayList0);
      assertEquals(0, interestRes0.getYear());
  }

    @Test(timeout = 4000)
    public void test5()  throws Throwable  {
        InterestSvc interestService0 = mock(InterestSvc.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(interestService0).getHistoryKeywords(anyInt() , anyString());
        InterestController interestController0 = new InterestController(interestService0);
        ResponseVO responseVO0 = interestController0.interestHistory(1, "");
        assertNull(responseVO0);
    }

    @Test(timeout = 4000)
    public void test6()  throws Throwable  {
        InterestSvc interestService0 = mock(InterestSvc.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(interestService0).getFutureKeywords(anyInt() , anyString());
        InterestController interestController0 = new InterestController(interestService0);
        ResponseVO responseVO0 = interestController0.interestPrediction(1, "");
        assertNull(responseVO0);
    }


}

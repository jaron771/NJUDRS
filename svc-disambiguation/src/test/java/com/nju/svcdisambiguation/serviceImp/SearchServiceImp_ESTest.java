/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 08 11:55:56 GMT 2022
 */

package com.nju.svcdisambiguation.serviceImp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.dataMapper.acm.ACMSearchMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEESearchMapper;
import com.nju.svcdisambiguation.serviceImp.SearchServiceImp;
import com.nju.svcdisambiguation.vo.AuthorVO;
import com.nju.svcdisambiguation.vo.PaperVO;
import com.nju.svcdisambiguation.vo.ResponseVO;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SearchServiceImp_ESTest extends SearchServiceImp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImp0.searchByAuthorName("E#26&<f5gnr", (-1371), 0, (-1633), (-1371), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImp0.searchByInstitutionName("*k/So5K=40", 0, 1, 1, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImp0.searchByAuthorName("", (-544), 1089, (-544), 1089, 1089);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectAuthorsByDocId(anyInt());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      PaperVO paperVO0 = new PaperVO(1, "ACM", "H>", "H>", "com.nju.svcdisambiguation.serviceImp.YearCmp", (-2097662243), (-2097662243), (ArrayList<AuthorVO>) null, "1bWT+");
      arrayList0.add(paperVO0);
      ResponseVO responseVO0 = searchServiceImp0.searchByInstitutionName("com.nju.svcdisambiguation.po.acm.ACMPaperPO", 1, 1, (-964656), (-2097662243), (-2097662243));
      assertTrue(responseVO0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      PaperVO paperVO0 = new PaperVO();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      arrayList0.add(paperVO0);
      // Undeclared exception!
      try { 
        searchServiceImp0.searchByInstitutionName("EtXg@%?>@ZAV8w!7MN", 1, 1, 1, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      ArrayList<AuthorVO> arrayList1 = new ArrayList<AuthorVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList1).when(iEEESearchMapper0).selectAuthorsByDocId(anyInt());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      PaperVO paperVO0 = new PaperVO(1, "EtXg@%?r@ZA{[V8;!7MN", "EtXg@%?r@ZA{[V8;!7MN", "EtXg@%?r@ZA{[V8;!7MN", "EtXg@%?r@ZA{[V8;!7MN", 1, 1, arrayList1, "EtXg@%?r@ZA{[V8;!7MN");
      arrayList0.add(paperVO0);
      ResponseVO responseVO0 = searchServiceImp0.searchByInstitutionName("EtXg@%?r@ZA{[V8;!7MN", 1, 1, 1, 1, 1);
      assertTrue(responseVO0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImp0.searchByInstitutionName("W%=)", 0, 0, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImp searchServiceImp0 = new SearchServiceImp(iEEESearchMapper0, aCMSearchMapper0);
      ResponseVO responseVO0 = searchServiceImp0.searchByAuthorName("EtXg@%?>@ZAV8w!7MN", 440, 440, 440, 440, (-3353));
      assertTrue(responseVO0.getSuccess());
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 08 12:29:45 GMT 2022
 */

package com.nju.svcdisambiguation.serviceImp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.dataMapper.acm.ACMSearchMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEESearchMapper;
import com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld2;
import com.nju.svcdisambiguation.vo.AuthorVO;
import com.nju.svcdisambiguation.vo.PaperVO;
import com.nju.svcdisambiguation.vo.ResponseVO;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SearchServiceImpOld2_ESTest extends SearchServiceImpOld2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      PaperVO paperVO0 = new PaperVO();
      paperVO0.setDb("com.nju.svcdisambiguation.vo.AuthorVO");
      paperVO0.setPublication("cK");
      arrayList0.add(paperVO0);
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld2_0.searchByInstitutionName(".orynIt:w{el,", 0, (-1535), 2987, 1168, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld2", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      ResponseVO responseVO0 = searchServiceImpOld2_0.searchByAuthorName("qV,WFkd95nX", 1, (-1), (-1840), (-299), (-300));
      assertTrue(responseVO0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld2_0.searchByAuthorName((String) null, (-2111020648), (-2111020648), (-2111020648), (-2111020648), (-2111020648));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1891096408
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld2", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      ArrayList<AuthorVO> arrayList1 = new ArrayList<AuthorVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectAuthorsByDocId(anyInt());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      PaperVO paperVO0 = new PaperVO(1, "ACM", "ACM", "ACM", "ACM", 1, 1, arrayList1, "ACM");
      arrayList0.add(paperVO0);
      ResponseVO responseVO0 = searchServiceImpOld2_0.searchByInstitutionName("ACM", 1, 1, 1, 1, 1);
      assertNull(responseVO0.getMessage());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      PaperVO paperVO0 = new PaperVO();
      arrayList0.add(paperVO0);
      // Undeclared exception!
      try { 
        searchServiceImpOld2_0.searchByAuthorName("S:6", 1, 1, 1, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayList<PaperVO> arrayList0 = new ArrayList<PaperVO>();
      ArrayList<AuthorVO> arrayList1 = new ArrayList<AuthorVO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectAuthorsByDocId(anyInt());
      doReturn(arrayList0).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(aCMSearchMapper0).selectPaperVOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      PaperVO paperVO0 = new PaperVO(1, "S:6", "S:6", "S:6", "S:6", 1, 1, arrayList1, "S:6");
      arrayList0.add(paperVO0);
      ResponseVO responseVO0 = searchServiceImpOld2_0.searchByAuthorName("S:6", 1, 1, 1, 1, 1);
      assertTrue(responseVO0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectPaperVOByInsName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld2 searchServiceImpOld2_0 = new SearchServiceImpOld2(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld2_0.searchByInstitutionName("com.nju.svcdsamiguatien.vo.AutorVO", 0, 0, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld2", e);
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 08 11:28:28 GMT 2022
 */

package com.nju.svcdisambiguation.serviceImp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.dataMapper.acm.ACMDisambiguationMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEEDisambiguationMapper;
import com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class DisambiguationServiceImp_ESTest extends DisambiguationServiceImp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("]", "b").when(aCMDisambiguationMapper0).selectAuthorNameById(anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("ACM", 17, 17);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("CHH7fR) 9", "xZ5t<708ldb").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp((ACMDisambiguationMapper) null, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity(" ", 2, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[6];
      int int0 = 44;
      Integer integer0 = new Integer(44);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integerArray0[1];
      integerArray0[3] = integerArray0[2];
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(int0, integerArray0[4]).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integerArray0[3], integerArray0[3]).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("[<4D!}YMT|{^S:", "[<4D!}YMT|{^S:", "E7f0", "C,V", "[<4D!}YMT|{^S:").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("s+", '6', (-1522));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[0];
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startInsDisambiguation("=OA", '%', 1826);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp((ACMDisambiguationMapper) null, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startAuthorDisambiguation("[)k(jrw3 tI+Tif", 'z', 309);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-3116));
      Integer integer1 = new Integer(46);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer1).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(integer1, integer0).when(iEEEDisambiguationMapper0).selectInsAliasById(anyInt());
      doReturn("IR=8|", "IR=8|").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("C,V", (-2405), (-3116));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(aCMDisambiguationMapper0).getMaxInsAlias();
      doReturn("iVw2MF)^t", "iVw2MF)^t").when(aCMDisambiguationMapper0).selectInsNameById(anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getInsSimilarity("ACM", (-2081), (-576));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1073741824);
      Integer integer1 = new Integer(0);
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(aCMDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integer1, integer0).when(aCMDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn("", "").when(aCMDisambiguationMapper0).selectAuthorNameById(anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("ACM", 4181, 4181);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(aCMDisambiguationMapper0).getMaxAuthorAlias();
      doReturn("uCVz)=", "uCVz)=").when(aCMDisambiguationMapper0).selectAuthorNameById(anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getAuthorSimilarity("ACM", (-1088063396), (-1870));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = new Integer(1);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      doReturn("56", "*CAh7", "", "I").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startInsDisambiguation("=OA", '>', 1827);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 2;
      Integer integer0 = new Integer(2);
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn((String) null, (String) null).when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("b", ' ', int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(" ", "aUo44b-@VCuZYyZlC", "g", "").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.getInsSimilarity("com.nju.svcdisambiguation.po.CalLengthPO", (-2405), (-957));
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getInsSimilarity("R8H", 5, (-2405));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = new Integer(1729);
      integerArray0[0] = integer0;
      integerArray0[2] = integerArray0[0];
      Integer integer1 = new Integer(0);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0[2]).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(integer1, integerArray0[0]).when(iEEEDisambiguationMapper0).selectInsAliasById(anyInt());
      doReturn("`'", "`'").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("`'", 749, (-985));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn("s+", "s+").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getAuthorSimilarity("%", (-117), (-117));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer(0);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integer1, int0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn("#Ily5WOW", "#Ily5WOW").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("#Ily5WOW", 0, (-188531883));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[8];
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      integerArray0[2] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integerArray0[2], int0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn("#Ily5WOW", "#Ily5WOW").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("#Ily5WOW", 0, (-188531883));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("b", "author ").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("=OA", '$', (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("$LS?:JqR{t=Z91d TU", "ins").when(aCMDisambiguationMapper0).selectAuthorNameById(anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("ACM", 4181, 4181);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEDisambiguationMapper0).selectAuthorCalLengthPO();
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("author", "author");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMDisambiguationMapper0).selectAuthorCalLengthPO();
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("author", "ACM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp((ACMDisambiguationMapper) null, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("ins", "ACM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEDisambiguationMapper0).selectInsCalLengthPO();
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("ins", "ins");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer[]) null).when(aCMDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startInsDisambiguation("ACM", '&', '&');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[8];
      int int0 = (-1);
      Integer integer0 = new Integer((-1));
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integerArray0[0];
      integerArray0[3] = integer0;
      integerArray0[4] = integerArray0[3];
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      integerArray0[7] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0, integerArray0[7], integer0, int0, integerArray0[7]).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integer0, integer0, integerArray0[7], integerArray0[7], int0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("#Ily5WOW", "#Ily5WOW", "Aw", "#Ily5WOW", "{SwDaXATb2.)").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startAuthorDisambiguation("JAY", 'A', 1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer[]) null).when(aCMDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, (IEEEDisambiguationMapper) null);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("ACM", '2', 2590);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[6];
      int int0 = 0;
      Integer integer0 = new Integer(0);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      Integer integer1 = new Integer((-985));
      integerArray0[3] = integer1;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer1, int0, int0).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(int0, integerArray0[0], int0, integerArray0[3], integer1).when(iEEEDisambiguationMapper0).selectInsAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      doReturn("`'", "`'", "`'", "`'", "`'").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startInsDisambiguation("`'", '$', int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer(1729);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer1;
      Integer integer2 = new Integer((-985));
      integerArray0[3] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[4] = integer3;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      doReturn("2Sv`", "2Sv`").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startInsDisambiguation(">&E.(sD%hgz", 'R', 134);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("=L/;", "4").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("s+", (-345), (-1522));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(aCMDisambiguationMapper0).getMaxInsAlias();
      doReturn("Z))", "Z))").when(aCMDisambiguationMapper0).selectInsNameById(anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getInsSimilarity("ACM", (-2181), (-2181));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-1));
      Integer[] integerArray0 = new Integer[5];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      integerArray0[3] = integer0;
      Integer integer1 = new Integer(0);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0, integer0, integer0).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integer0, integer0, integer0, integer0, integer1).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("aUo44b-@VCuZYyZlC", "aUo44b-@VCuZYyZlC", "", "", "aUo44b-@VCuZYyZlC").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("aUo44b-@VCuZYyZlC", 'e', 1121);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.calLength("2Sv`", ">&E.(sD%hgz");
  }
}

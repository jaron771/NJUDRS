/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 29 09:54:20 GMT 2020
 */

package com.nju.svcdisambiguation.serviceImp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.dataMapper.acm.ACMDisambiguationMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEEDisambiguationMapper;
import com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class DisambiguationServiceImp_ESTest extends DisambiguationServiceImp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("gDInuaQ51", "ACM", "gDInuaQ51", "%").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.getAuthorSimilarity("/", (-780), (-780));
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("", 0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("&", "15d^3p}_o#pyY(w").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("aV", 0, 1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("wE2", " ").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp((ACMDisambiguationMapper) null, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("", (-267925935), 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", "ptHh/").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity(".<B^V$)fm&,WAM4", 14, 14);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[0];
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startInsDisambiguation("nMI?pR@I`s!'", '~', 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[0];
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startAuthorDisambiguation("", '|', 0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(1001);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integerArray0[1];
      integerArray0[3] = integerArray0[2];
      Integer integer1 = new Integer(0);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer1, integerArray0[0], integerArray0[0], integer1, integerArray0[2]).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(integerArray0[3], integer0, integer0, integer1, integer1).when(iEEEDisambiguationMapper0).selectInsAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      doReturn("9#4:X", "9#4:X", "", "4rKn4\"", "").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startInsDisambiguation("", 'S', (-4571));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-2687));
      Integer integer1 = new Integer((-1126219373));
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(integer1, integer1).when(iEEEDisambiguationMapper0).selectInsAliasById(anyInt());
      doReturn(".~'NZ'`", ".~'NZ'`").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("HP)", 1, (-1));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(97);
      Integer integer1 = new Integer(97);
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(aCMDisambiguationMapper0).getMaxInsAlias();
      doReturn("=g}w7Q]^/[", "=g}w7Q]^/[").when(aCMDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, (IEEEDisambiguationMapper) null);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getInsSimilarity("ACM", 1, 97);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-200135214));
      Integer integer1 = new Integer((-2633));
      String string0 = "1V?n\\uf";
      Integer integer2 = new Integer(0);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer1).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integer2, integer0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(string0, string0).when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity("0]?h=sSLS", 0, 2);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(1001);
      integerArray0[0] = integer0;
      integerArray0[1] = integerArray0[0];
      integerArray0[2] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0[2]).when(iEEEDisambiguationMapper0).getMaxInsAlias();
      doReturn(integer0, integer0).when(iEEEDisambiguationMapper0).selectInsAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      doReturn("9#4:X", "9#4:X", "", "%").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startInsDisambiguation("", 'S', (-4571));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[3];
      int int0 = 44;
      Integer integer0 = new Integer(44);
      integerArray0[0] = integer0;
      integerArray0[1] = integerArray0[0];
      integerArray0[2] = (Integer) int0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0[0]).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integerArray0[2], integer0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("zdI5yBNu+BO,", "zdI5yBNu+BO,", "p", "").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("com.nju.svcdisambiguation.po.CalLengthPO", '>', (-840));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-200135214));
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      String string0 = "1V?n\\uf";
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0[1]).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integerArray0[0], integerArray0[1]).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(string0, string0, "", "%").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.getAuthorSimilarity("0]?h=sSLS", 0, 2);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getAuthorSimilarity("", (-2021825010), 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-1126148912));
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEDisambiguationMapper0).selectAuthorCalLengthPO();
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("author", ",");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      ACMDisambiguationMapper aCMDisambiguationMapper1 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEDisambiguationMapper0).selectInsCalLengthPO();
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper1, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("ins", "ins");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer) null).when(aCMDisambiguationMapper0).getMaxAuthorAlias();
      doReturn("=g}w7Q]^/[", "=g}w7Q]^/[").when(aCMDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, (IEEEDisambiguationMapper) null);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.getAuthorSimilarity("ACM", (-210), 3269);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("Bg![", "com.nju.svcdisambiguation.po.CalLengthPO", "o5-QN+}d", "").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.getInsSimilarity("1{WalB", 0, (-1598));
      double double0 = disambiguationServiceImp0.getInsSimilarity("1VD)uN xT/", 1, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn("", "o5-QN+}d").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getAuthorSimilarity(")K+4jZHD>$~A NG*,~", 0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMDisambiguationMapper0).selectInsCalLengthPO();
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, (IEEEDisambiguationMapper) null);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.calLength("ins", "ACM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer[]) null).when(aCMDisambiguationMapper0).selectInsIds(anyString() , anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startInsDisambiguation("ACM", 'M', (-1620740380));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Integer[]) null).when(aCMDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("ACM", 'R', 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(")<7}Eaes7", "jv:sh^ gO$tn'#O%Zo").when(iEEEDisambiguationMapper0).selectInsNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      double double0 = disambiguationServiceImp0.getInsSimilarity("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", 1, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      Integer[] integerArray0 = new Integer[3];
      int int0 = 44;
      Integer integer0 = new Integer(44);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integerArray0[0];
      Integer integer1 = new Integer(0);
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integerArray0[0], integer0).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(int0, integerArray0[0], integer1, int0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("9Y", "4rKn4\"", "`Cs8`", "`Cs8`", "~+Z1U8{").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.startAuthorDisambiguation("com.nju.svcdisambiguation.po.CalLengthPO", '>', (-840));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      int int0 = 1;
      Integer integer0 = new Integer(1);
      Integer[] integerArray0 = new Integer[6];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integer0;
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(iEEEDisambiguationMapper0).getMaxAuthorAlias();
      doReturn(integer0, integer0).when(iEEEDisambiguationMapper0).selectAuthorAliasById(anyInt());
      doReturn(integerArray0).when(iEEEDisambiguationMapper0).selectAuthorIds(anyString() , anyInt());
      doReturn("s+", "s+", " ", "jv:sh^ gO$tn'#O%Zo").when(iEEEDisambiguationMapper0).selectAuthorNameById(anyInt());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      // Undeclared exception!
      try { 
        disambiguationServiceImp0.startAuthorDisambiguation("4JzVq'di", '?', int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.DisambiguationServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ACMDisambiguationMapper aCMDisambiguationMapper0 = mock(ACMDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      IEEEDisambiguationMapper iEEEDisambiguationMapper0 = mock(IEEEDisambiguationMapper.class, new ViolatedAssumptionAnswer());
      DisambiguationServiceImp disambiguationServiceImp0 = new DisambiguationServiceImp(aCMDisambiguationMapper0, iEEEDisambiguationMapper0);
      disambiguationServiceImp0.calLength("author ", "m");
  }
}

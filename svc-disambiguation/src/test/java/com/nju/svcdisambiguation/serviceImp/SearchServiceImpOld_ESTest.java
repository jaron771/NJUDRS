/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 08 12:09:41 GMT 2022
 */

package com.nju.svcdisambiguation.serviceImp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.dataMapper.acm.ACMSearchMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEESearchMapper;
import com.nju.svcdisambiguation.po.acm.ACMPaperPO;
import com.nju.svcdisambiguation.po.ieee.IEEEPaperPO;
import com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SearchServiceImpOld_ESTest extends SearchServiceImpOld_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectACMPaperPOByInstitutionName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByInstitutionName("", (-6582), 2125, 0, (-6582), (-503));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectACMPaperPOByInstitutionName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByInstitutionName("com.nju.svcdisambiguation.vo.search.AuthorSearchResultVO", 0, 0, 3114, 2629, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectIEEEPaperPOByAuthorName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByAuthorName("Meh$X", 3114, (-4177), 0, (-4177), (-4177));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<IEEEPaperPO> arrayList0 = new ArrayList<IEEEPaperPO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectIEEEPaperPOByAuthorName(anyString() , anyInt() , anyInt());
      ArrayList<ACMPaperPO> arrayList1 = new ArrayList<ACMPaperPO>();
      IEEEPaperPO iEEEPaperPO0 = new IEEEPaperPO(320, "#JKpt$WFT", "z,Ibo!bM!uUI=~9m(/G", "#JKpt$WFT", "IEEE", 557, 2423);
      arrayList0.add(iEEEPaperPO0);
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByAuthorName("com.nju.svcdisambiguation.po.ieee.IEEEPaperPO", 1, 1, 0, 0, 2982);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectIEEEPaperPOByAuthorName(anyString() , anyInt() , anyInt());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByAuthorName("r*qd+", 2619, 2619, 2619, 2619, 2619);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayList<IEEEPaperPO> arrayList0 = new ArrayList<IEEEPaperPO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(iEEESearchMapper0).selectIEEEPaperPOByAuthorName(anyString() , anyInt() , anyInt());
      ArrayList<ACMPaperPO> arrayList1 = new ArrayList<ACMPaperPO>();
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList1).when(aCMSearchMapper0).selectACMPaperPOByAuthorName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByAuthorName("", 1217237989, 1217237989, 1217237989, 1217237989, 1217237989);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -953862412
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectACMPaperPOByInstitutionName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByInstitutionName((String) null, 0, (-4177), (-4177), 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayList<IEEEPaperPO> arrayList0 = new ArrayList<IEEEPaperPO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEESearchMapper0).selectIEEEAuthorPOByDocId(anyInt());
      doReturn(arrayList0).when(iEEESearchMapper0).selectIEEEPaperPOByInstitutionName(anyString() , anyInt() , anyInt());
      ArrayList<ACMPaperPO> arrayList1 = new ArrayList<ACMPaperPO>();
      IEEEPaperPO iEEEPaperPO0 = new IEEEPaperPO(320, "#JKpt$WFT", "z,Ibo!bM!uUI=~9m(/G", "#JKpt$WFT", "IEEE", 557, 2423);
      arrayList0.add(iEEEPaperPO0);
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList1).when(aCMSearchMapper0).selectACMPaperPOByInstitutionName(anyString() , anyInt() , anyInt());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      searchServiceImpOld0.searchByInstitutionName("9v=g8qhY", 1, 2982, 0, 2982, 2982);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayList<IEEEPaperPO> arrayList0 = new ArrayList<IEEEPaperPO>();
      IEEESearchMapper iEEESearchMapper0 = mock(IEEESearchMapper.class, new ViolatedAssumptionAnswer());
      ArrayList<ACMPaperPO> arrayList1 = new ArrayList<ACMPaperPO>();
      ACMSearchMapper aCMSearchMapper0 = mock(ACMSearchMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(aCMSearchMapper0).selectACMAuthorPOByDocId(anyInt());
      doReturn(arrayList1).when(aCMSearchMapper0).selectACMPaperPOByInstitutionName(anyString() , anyInt() , anyInt());
      doReturn((Integer) null).when(aCMSearchMapper0).selectCitationsCountByDocId(anyInt());
      doReturn((String) null).when(aCMSearchMapper0).selectKeywordsByDocId(anyInt());
      SearchServiceImpOld searchServiceImpOld0 = new SearchServiceImpOld(iEEESearchMapper0, aCMSearchMapper0);
      ACMPaperPO aCMPaperPO0 = new ACMPaperPO();
      arrayList1.add(aCMPaperPO0);
      // Undeclared exception!
      try { 
        searchServiceImpOld0.searchByInstitutionName("AEC%5M@NdL", 2633630, 2633630, 2633630, 2633630, 2633630);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.SearchServiceImpOld", e);
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 08 11:57:56 GMT 2022
 */

package com.nju.svcdisambiguation.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.controller.InstitutionDetailController;
import com.nju.svcdisambiguation.dataMapper.acm.ACMAuthorDetailMapper;
import com.nju.svcdisambiguation.dataMapper.acm.ACMInstitutionDetailMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEEAuthorDetailMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEEInstitutionDetailMapper;
import com.nju.svcdisambiguation.service.InstitutionDetailService;
import com.nju.svcdisambiguation.serviceImp.InstitutionDetailServiceImp;
import com.nju.svcdisambiguation.vo.ResponseVO;
import com.nju.svcdisambiguation.vo.detail.institution.InstitutionInfoVO;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class InstitutionDetailController_ESTest extends InstitutionDetailController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InstitutionInfoVO institutionInfoVO0 = mock(InstitutionInfoVO.class, new ViolatedAssumptionAnswer());
      IEEEInstitutionDetailMapper iEEEInstitutionDetailMapper0 = mock(IEEEInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn(institutionInfoVO0).when(iEEEInstitutionDetailMapper0).selectInstitutionDetailById(anyInt());
      doReturn((ArrayList) null).when(iEEEInstitutionDetailMapper0).selectSameInsByInstitutionId(anyInt());
      ACMInstitutionDetailMapper aCMInstitutionDetailMapper0 = mock(ACMInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      ACMAuthorDetailMapper aCMAuthorDetailMapper0 = mock(ACMAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      InstitutionDetailServiceImp institutionDetailServiceImp0 = new InstitutionDetailServiceImp(iEEEInstitutionDetailMapper0, aCMInstitutionDetailMapper0, iEEEAuthorDetailMapper0, aCMAuthorDetailMapper0);
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController(institutionDetailServiceImp0);
      // Undeclared exception!
      try { 
        institutionDetailController0.getInstitutionInfo((-2029), "com.nju.svcdisambiguation.controller.InstitutionDetailController");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.InstitutionDetailServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IEEEInstitutionDetailMapper iEEEInstitutionDetailMapper0 = mock(IEEEInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((InstitutionInfoVO) null).when(iEEEInstitutionDetailMapper0).selectInstitutionDetailById(anyInt());
      ACMInstitutionDetailMapper aCMInstitutionDetailMapper0 = mock(ACMInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      InstitutionDetailServiceImp institutionDetailServiceImp0 = new InstitutionDetailServiceImp(iEEEInstitutionDetailMapper0, aCMInstitutionDetailMapper0, iEEEAuthorDetailMapper0, (ACMAuthorDetailMapper) null);
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController(institutionDetailServiceImp0);
      ResponseVO responseVO0 = institutionDetailController0.getInstitutionInfo(0, "tG|epU,|bvS|2|K");
      assertEquals("Institution does not exist.", responseVO0.getMessage());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IEEEInstitutionDetailMapper iEEEInstitutionDetailMapper0 = mock(IEEEInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEInstitutionDetailMapper0).selectInstitutionAuthor(anyString());
      doReturn((String) null).when(iEEEInstitutionDetailMapper0).selectInstitutionName(anyInt());
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      ACMAuthorDetailMapper aCMAuthorDetailMapper0 = mock(ACMAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      InstitutionDetailServiceImp institutionDetailServiceImp0 = new InstitutionDetailServiceImp(iEEEInstitutionDetailMapper0, (ACMInstitutionDetailMapper) null, iEEEAuthorDetailMapper0, aCMAuthorDetailMapper0);
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController(institutionDetailServiceImp0);
      ResponseVO responseVO0 = institutionDetailController0.getInstitutionAuthorStat(0, "FU{5T");
      assertNull(responseVO0.getMessage());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController((InstitutionDetailService) null);
      // Undeclared exception!
      try { 
        institutionDetailController0.getInstitutionSameAuthors((-2035), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.controller.InstitutionDetailController", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController((InstitutionDetailService) null);
      // Undeclared exception!
      try { 
        institutionDetailController0.getInstitutionFieldStat(1032, "pJL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.controller.InstitutionDetailController", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController((InstitutionDetailService) null);
      // Undeclared exception!
      try { 
        institutionDetailController0.getInstitutionAuthorActivation(97, "com.nju.svcdisambiguation.vo.detail.institution.InstitutionInfoVO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.controller.InstitutionDetailController", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IEEEInstitutionDetailMapper iEEEInstitutionDetailMapper0 = mock(IEEEInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEInstitutionDetailMapper0).selectFieldSummaryPOByInstitutionNAME(anyString());
      doReturn((String) null).when(iEEEInstitutionDetailMapper0).selectInstitutionName(anyInt());
      ACMInstitutionDetailMapper aCMInstitutionDetailMapper0 = mock(ACMInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      InstitutionDetailServiceImp institutionDetailServiceImp0 = new InstitutionDetailServiceImp(iEEEInstitutionDetailMapper0, aCMInstitutionDetailMapper0, iEEEAuthorDetailMapper0, (ACMAuthorDetailMapper) null);
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController(institutionDetailServiceImp0);
      ResponseVO responseVO0 = institutionDetailController0.getInstitutionFieldStat(0, "com.nju.svcdisambiguation.vo.ResponseVO");
      assertTrue(responseVO0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IEEEInstitutionDetailMapper iEEEInstitutionDetailMapper0 = mock(IEEEInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEInstitutionDetailMapper0).selectSameAuthorIds(anyInt());
      ACMInstitutionDetailMapper aCMInstitutionDetailMapper0 = mock(ACMInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      InstitutionDetailServiceImp institutionDetailServiceImp0 = new InstitutionDetailServiceImp(iEEEInstitutionDetailMapper0, aCMInstitutionDetailMapper0, iEEEAuthorDetailMapper0, (ACMAuthorDetailMapper) null);
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController(institutionDetailServiceImp0);
      // Undeclared exception!
      try { 
        institutionDetailController0.getInstitutionSameAuthors((-3028), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.InstitutionDetailServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IEEEInstitutionDetailMapper iEEEInstitutionDetailMapper0 = mock(IEEEInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEInstitutionDetailMapper0).selectInstitutionAuthor(anyString());
      doReturn((String) null).when(iEEEInstitutionDetailMapper0).selectInstitutionName(anyInt());
      ACMInstitutionDetailMapper aCMInstitutionDetailMapper0 = mock(ACMInstitutionDetailMapper.class, new ViolatedAssumptionAnswer());
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      InstitutionDetailServiceImp institutionDetailServiceImp0 = new InstitutionDetailServiceImp(iEEEInstitutionDetailMapper0, aCMInstitutionDetailMapper0, iEEEAuthorDetailMapper0, (ACMAuthorDetailMapper) null);
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController(institutionDetailServiceImp0);
      ResponseVO responseVO0 = institutionDetailController0.getInstitutionAuthorActivation((-433), "");
      assertTrue(responseVO0.getSuccess());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      InstitutionDetailController institutionDetailController0 = new InstitutionDetailController((InstitutionDetailService) null);
      // Undeclared exception!
      try { 
        institutionDetailController0.getInstitutionAuthorStat(567, "aQ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.controller.InstitutionDetailController", e);
      }
  }
}

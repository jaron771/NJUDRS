/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 31 13:33:09 GMT 2020
 */

package com.nju.svcdisambiguation.controller;

import com.nju.svcdisambiguation.service.PaperDetailService;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.nju.svcdisambiguation.controller.AuthorDetailController;
import com.nju.svcdisambiguation.dataMapper.acm.ACMAuthorDetailMapper;
import com.nju.svcdisambiguation.dataMapper.ieee.IEEEAuthorDetailMapper;
import com.nju.svcdisambiguation.service.AuthorDetailService;
import com.nju.svcdisambiguation.serviceImp.AuthorDetailServiceImp;
import com.nju.svcdisambiguation.vo.ResponseVO;
import com.nju.svcdisambiguation.vo.detail.author.AuthorDetailVO;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class AuthorDetailController_ESTest extends AuthorDetailController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEAuthorDetailMapper0).selectFieldSummaryPOByAuthorId(anyInt());
      ACMAuthorDetailMapper aCMAuthorDetailMapper0 = mock(ACMAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      AuthorDetailServiceImp authorDetailServiceImp0 = new AuthorDetailServiceImp(iEEEAuthorDetailMapper0, aCMAuthorDetailMapper0);
      AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailServiceImp0);
      // Undeclared exception!
      try { 
        authorDetailController0.getAuthorFieldSummary((-2364), "u");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.AuthorDetailServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuthorDetailController authorDetailController0 = new AuthorDetailController((AuthorDetailService) null);
      // Undeclared exception!
      try { 
        authorDetailController0.getAuthorPublicationSummary(0, "~#;2]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.controller.AuthorDetailController", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((AuthorDetailVO) null).when(iEEEAuthorDetailMapper0).selectAuthorDetailById(anyInt());
      doReturn((ArrayList) null).when(iEEEAuthorDetailMapper0).selectInstitutionByAuthorId(anyInt());
      ACMAuthorDetailMapper aCMAuthorDetailMapper0 = mock(ACMAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      AuthorDetailServiceImp authorDetailServiceImp0 = new AuthorDetailServiceImp(iEEEAuthorDetailMapper0, aCMAuthorDetailMapper0);
      AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailServiceImp0);
      // Undeclared exception!
      try { 
        authorDetailController0.getAuthorDetail(0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.nju.svcdisambiguation.serviceImp.AuthorDetailServiceImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IEEEAuthorDetailMapper iEEEAuthorDetailMapper0 = mock(IEEEAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      doReturn((ArrayList) null).when(iEEEAuthorDetailMapper0).selectAuthorPublicationSummaryByAuthorId(anyInt());
      ACMAuthorDetailMapper aCMAuthorDetailMapper0 = mock(ACMAuthorDetailMapper.class, new ViolatedAssumptionAnswer());
      AuthorDetailServiceImp authorDetailServiceImp0 = new AuthorDetailServiceImp(iEEEAuthorDetailMapper0, aCMAuthorDetailMapper0);
      AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailServiceImp0);
      ResponseVO responseVO0 = authorDetailController0.getAuthorPublicationSummary(1915, "");
      assertNull(responseVO0.getMessage());
  }

    @Test(timeout = 4000)
    public void test4()  throws Throwable  {
        AuthorDetailService authorDetailService0 = mock(AuthorDetailService.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(authorDetailService0).getAuthorInfluence(anyInt() , anyString());
        AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailService0);
        ResponseVO responseVO0 = authorDetailController0.getAuthorInfluence(1,"");
        assertNull(responseVO0);
    }

    @Test(timeout = 4000)
    public void test5()  throws Throwable  {
        AuthorDetailService authorDetailService0 = mock(AuthorDetailService.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(authorDetailService0).getAuthorReferred(anyInt() , anyString());
        AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailService0);
        ResponseVO responseVO0 = authorDetailController0.getAuthorReferred(1,"");
        assertNull(responseVO0);
    }

    @Test(timeout = 4000)
    public void test6()  throws Throwable  {
        AuthorDetailService authorDetailService0 = mock(AuthorDetailService.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(authorDetailService0).getAuthorRefer(anyInt() , anyString(),anyInt(),anyInt());
        AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailService0);
        ResponseVO responseVO0 = authorDetailController0.getAuthorRefer(1,"",1,1);
        assertNull(responseVO0);
    }

    @Test(timeout = 4000)
    public void test7()  throws Throwable  {
        AuthorDetailService authorDetailService0 = mock(AuthorDetailService.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(authorDetailService0).getAuthorFieldSummary(anyInt() , anyString());
        AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailService0);
        ResponseVO responseVO0 = authorDetailController0.getAuthorFieldSummary(1,"");
        assertNull(responseVO0);
    }

    @Test(timeout = 4000)
    public void test8()  throws Throwable  {
        AuthorDetailService authorDetailService0 = mock(AuthorDetailService.class, new ViolatedAssumptionAnswer());
        doReturn((ResponseVO) null).when(authorDetailService0).getAuthorDetail(anyInt() , anyString());
        AuthorDetailController authorDetailController0 = new AuthorDetailController(authorDetailService0);
        ResponseVO responseVO0 = authorDetailController0.getAuthorDetail(1,"");
        assertNull(responseVO0);
    }
}
